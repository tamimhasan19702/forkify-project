{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAS,CAAC,EAAC;IACxB,OAAO,IAAI,OAAO,CAAE,SAAS,CAAC,EAAC,MAAM,EAAC;QACrC,UAAU,CAAC,WAAU;YACnB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,4CAA4C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC9E,EAAE,CAAC,GAAG,IAAI,CAAE,CAAC;KACd,CAAC,CAAC;CACL;AAED,mDAAmD;AAEnD,MAAM,UAAU,GAAG,iBAAgB;IAC/B,IAAG;QACH,qBAAqB;QAErB,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,2EAA2E,CAAC,AAAC;QACrG,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,AAAC;QAE9B,IAAG,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/D,IAAI,EAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAC3B,MAAM,GAAG;YACR,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;SAC/B;QAED,wBAAwB;QAExB,MAAM,MAAM,GAAG,CAAC,iDAEN,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,oEAErC,EAAE,MAAM,CAAC,KAAK,CAAC,mRASmC,EAAE,MAAM,CAAC,WAAW,CAAC,8RAQtB,EAAE,MAAM,CAAC,QAAQ,CAAC,k4BAiC7E,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA,GAAG,GAAI;YAC9B,OAAO,CAAC,wMAK2B,EAAE,GAAG,CAAC,QAAQ,CAAC,gGAEd,EAAE,GAAG,CAAC,IAAI,CAAC,yBACrC,EAAE,GAAG,CAAC,WAAW,CAAC,2CAG5B,CAAC,CAAA;SACF,CAAC,CAAC,wPASgC,EAAE,MAAM,CAAC,SAAS,CAAC,oFAG7C,EAAE,MAAM,CAAC,SAAS,CAAC,gOAO5B,CAAC;QACH,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;QAC/B,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAC,MAAM,CAAC;KAEpD,CAAA,OAAM,GAAG,EAAC;QAEX,KAAK,CAAC,GAAG,CAAC,CAAC;KAEV;CACJ,AAAC;AAED,UAAU,EAAE,CAAC","sources":["src/js/script.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\r\n\r\nconst timeout = function(s){\r\n   return new Promise (function(_,reject){\r\n    setTimeout(function(){\r\n      reject(new Error(`Request Took to long to load! Timeout after ${s} second`));\r\n    }, s * 1000 );\r\n   });\r\n}\r\n\r\n// ================================================\r\n\r\nconst showRecipe = async function(){\r\n    try{\r\n    // inserting api data\r\n\r\n    const res = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886');\r\n    const data = await res.json();\r\n\r\n    if(!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    let { recipe } = data.data;\r\n    recipe = {\r\n     id: recipe.id,\r\n     title: recipe.title,\r\n     publisher: recipe.publisher,\r\n     sourceUrl: recipe.source_url,\r\n     image: recipe.image_url,\r\n     servings: recipe.servings,\r\n     cookingTime: recipe.cooking_time,\r\n     ingredients: recipe.ingredients,\r\n    }\r\n    \r\n    // rendering recipe data\r\n\r\n    const markUp = `\r\n    <figure class=\"recipe-fig\">\r\n    <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe-img\">\r\n    <h1 class=\"recipe-title\">\r\n        <span>${recipe.title}</span>\r\n    </h1>\r\n  </figure>\r\n\r\n   <div class=\"recipe-details\">\r\n    <div class=\"recipe-info\">\r\n        <svg class=\"recipe-info-icon\">\r\n         <use href=\"./img/icons.svg#icon-clock\"></use>\r\n        </svg>\r\n        <span class=\"recipe-info-data recipe-info-data-minutes\">${recipe.cookingTime}</span>\r\n        <span class=\"recipe-info-text\">Minutes</span>\r\n    </div>\r\n\r\n     <div class=\"recipe-info\">\r\n        <svg class=\"recipe-info-icon\">\r\n          <use href=\"./img/icons.svg#icon-users\"></use>\r\n        </svg>\r\n        <span class=\"recipe-info-data recipe-info-data-people\">${recipe.servings}</span>\r\n        <span class=\"recipe-info-text\">Servings</span>\r\n     \r\n    <div class=\"recipe-info-buttons\">\r\n        <button class=\"btn-tiny btn-increase-servings\">\r\n         <svg>\r\n            <use href=\"./img/icons.svg#icon-minus-cirlce\"></use>\r\n         </svg>\r\n        </button>\r\n        <button class=\"btn-tiny btn-increase-servings\">\r\n            <svg>\r\n                <use href=\"./img/icons.svg#icon-plus-circle\"></use>\r\n            </svg>\r\n        </button>\r\n    </div>\r\n   </div> \r\n \r\n  <div class=\"recipe-user-generated\">\r\n    <svg>\r\n        <use href=\"./img/icons.svg#icon-user\"></use>\r\n    </svg>\r\n </div>\r\n <button class=\"btn-round\">\r\n    <svg>\r\n        <use href=\"./img/icons.svg#icon-bookmark-fill\"></use>\r\n    </svg>\r\n </button>\r\n</div>\r\n\r\n<div class=\"recipe-ingredients\">\r\n    <h2 class=\"heading-2\">Recipe ingredients</h2>\r\n    <ul class=\"recipe-ingredient-list\">\r\n       \r\n    ${recipe.ingredients.map(ing => {\r\n      return `\r\n      <li class=\"recipe-ingredient\">\r\n            <svg class=\"recipe-icon\">\r\n             <use href=\"./img/icons.svg#icon-check\"></use>\r\n            </svg>\r\n            <div class=\"recipe-quantity\">${ing.quantity}</div>\r\n            <div class=\"recipe-description\">\r\n                <span class=\"recipe-unit\">${ing.unit}</span>\r\n                ${ing.description}\r\n            </div>\r\n        </li>\r\n      `\r\n    })}\r\n     \r\n    </ul>\r\n</div>\r\n\r\n<div class=\"recipe-directions\">\r\n    <h2 class=\"heading-2\">How to cook it</h2>\r\n    <p class=\"recipe-directions-text\">\r\n        This recipe was carefully designed and tested by \r\n        <span class=\"recipe-publisher\">${recipe.publisher}</span>\r\n     PLease check out directions at their website.\r\n    </p>\r\n    <a href=\"${recipe.sourceUrl}\" class=\"btn-small recipe-btn\" target=\"blank\">\r\n        <span>Directions</span>\r\n        <svg class=\"search-icon\">\r\n            <use href=\"./img/icons.svg#icon-arrow-right\"></use>\r\n        </svg>\r\n    </a>\r\n    </div> \r\n    `\r\n  recipeContainer.innerHTML = '';  \r\n  recipeContainer.insertAdjacentHTML('afterbegin',markUp)\r\n\r\n    }catch(err){\r\n\r\n    alert(err);\r\n\r\n    }\r\n};\r\n\r\n showRecipe();\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.09c24910.js.map","sourceRoot":"/__parcel_source_root/"}